{"version":3,"sources":["components/items/TodoItemList.module.css","components/items/TodoItemListCompleted.module.css","components/views/views.module.css","components/items/TodoItem.module.css","components/items/ItemCounter/ItemCounter.module.css","components/views/TitleMenu/TitleMenu.module.css","actions/index.js","components/items/TodoItem.js","components/items/TodoItemList.js","components/items/TodoItemListCompleted.js","components/views/TitleMenu/TitleMenu.js","components/items/ItemCounter/ItemCounter.js","components/views/views.js","App.js","serviceWorker.js","reducers/todo.js","reducers/index.js","index.js"],"names":["module","exports","nextTodoId","deleteTodo","name","type","payload","completeTodo","id","TodoItem","dispatch","useDispatch","itemAddHandler","item","todoItem","className","classes","form","top","onSubmit","e","preventDefault","target","reset","textArea","TextField","variant","onChange","value","todoButton","Button","color","TodoItemList","newData","useSelector","state","todos","filter","i","completed","itemList","map","d","key","itemBox","onClick","button1","button2","boxApart","spy","list","TodoItemListCompleted","changedData","TitleMenu","titleText","cascade","descriptionText","ItemCounter","data","onGoData","completedData","onGoCount","length","completedCount","progress","onGO","views","theme","createMuiTheme","typography","button","fontFamily","pageWrapper","goWrapper","goText","completedWrapper","completedText","App","Boolean","window","location","hostname","match","todoReducer","action","allReducers","combineReducers","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c78ca846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoItemList_list__31Abh\",\"itemBox\":\"TodoItemList_itemBox__iXUao\",\"button1\":\"TodoItemList_button1__1PjE8\",\"button2\":\"TodoItemList_button2__3EIwJ\",\"boxApart\":\"TodoItemList_boxApart__bVTTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoItemListCompleted_list__1le2D\",\"itemBox\":\"TodoItemListCompleted_itemBox__2Js2m\",\"button2\":\"TodoItemListCompleted_button2__29ibD\",\"button1\":\"TodoItemListCompleted_button1__3yQHU\",\"boxApart\":\"TodoItemListCompleted_boxApart__lP-ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"views_pageWrapper__1o1b-\",\"goWrapper\":\"views_goWrapper__3hgNM\",\"goText\":\"views_goText__3nIJV\",\"completedWrapper\":\"views_completedWrapper__2YSbp\",\"completedText\":\"views_completedText__1fUJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoButton\":\"TodoItem_todoButton__2ZIsq\",\"textArea\":\"TodoItem_textArea__fLO_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ItemCounter_progress__3IoFi\",\"onGO\":\"ItemCounter_onGO__XGJqd\",\"completed\":\"ItemCounter_completed__2a7ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleText\":\"TitleMenu_titleText__1hEvy\",\"descriptionText\":\"TitleMenu_descriptionText__2Vz6t\"};","let nextTodoId = 0;\nexport const addTodo = (name) => {\n  return {\n    type: \"ADD_TODO\",\n    id: nextTodoId++,\n    payload: name,\n  };\n};\n\nexport const deleteTodo = (name) => {\n  return {\n    type: \"DELETE_TODO\",\n    payload: name,\n  };\n};\n\nexport const completeTodo = (id) => {\n  return {\n    type: \"COMPLETE_TODO\",\n    id\n  };\n};\n\nexport const revertTodo = (id) => {\n  return {\n    type: \"REVERT_TODO\",\n    id\n  };\n};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport classes from \"./TodoItem.module.css\";\nimport { FaPlus} from \"react-icons/fa\";\nimport Bounce from \"react-reveal/Fade\";\nconst TodoItem = () => {\n  const dispatch = useDispatch();\n\n  const itemAddHandler = (item) => {\n    dispatch(addTodo(item));\n  };\n  let todoItem = [];\n  return (\n    <div className={classes.form}>\n      <Bounce top>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          itemAddHandler(todoItem);\n          e.target.reset();\n        }}\n      >\n        <span className={classes.textArea}>\n          <TextField\n            variant=\"outlined\"\n            onChange={(e) => {\n              todoItem = e.target.value;\n            }}\n          />\n        </span>\n        <span className={classes.todoButton}>\n          <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n           <FaPlus/>\n          </Button>\n        </span>\n      </form>\n      </Bounce>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {completeTodo,  deleteTodo } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./TodoItemList.module.css\";\nimport HeadShake from \"react-reveal/HeadShake\";\nimport { FaCheck, FaTrash} from \"react-icons/fa\";\n\nconst TodoItemList = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.todos);\n  const newData = data.filter((i) => i.completed === false);\n  const itemList = newData.map((d) => (\n    <div key={d.id}>\n      <div className={classes.itemBox}>\n        <li onClick={() => dispatch(completeTodo(d.id))}>\n          {d.item}\n        </li>\n        <button\n          className={classes.button1}\n          onClick={() => dispatch(completeTodo(d.id))} \n        >\n          <FaCheck />\n        </button>\n        <button\n          className={classes.button2}\n          onClick={() => dispatch(deleteTodo(d.id))} \n        >\n          <FaTrash/>\n        </button>\n      </div>\n      <div className={classes.boxApart}></div>\n    </div>\n  ));\n  return (\n    <div>\n      <HeadShake spy={newData}>\n        <div className={classes.list}>\n          <ul>{itemList}</ul>\n        </div>\n      </HeadShake>\n    </div>\n  );\n};\n\nexport default TodoItemList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { deleteTodo, revertTodo } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./TodoItemListCompleted.module.css\";\nimport HeadShake from \"react-reveal/HeadShake\";\nimport { FaTrash, FaRedo } from \"react-icons/fa\";\n\nconst TodoItemListCompleted = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.todos);\n  const changedData = data.filter((i) => i.completed === true);\n  const itemList = changedData.map((d) => (\n    <div key={d.id}>\n      <div className={classes.itemBox}>\n        <li onClick={() => dispatch(deleteTodo(d.id))}>\n          {d.item}\n        </li>\n        <button\n          className={classes.button1}\n          onClick={() => dispatch(revertTodo(d.id))}\n        >\n          <FaRedo/>\n        </button>\n        <button\n          className={classes.button2}\n          onClick={() => dispatch(deleteTodo(d.id))}\n        >\n          <FaTrash />\n        </button>\n      </div>\n      <div className={classes.boxApart}></div>\n    </div>\n  ));\n  return (\n    <div>\n      <HeadShake spy={changedData}>\n        <div className={classes.list}>\n          <ul>{itemList}</ul>\n        </div>\n      </HeadShake>\n    </div>\n  );\n};\n\nexport default TodoItemListCompleted;\n","import React from \"react\";\nimport classes from \"./TitleMenu.module.css\";\nimport Bounce from \"react-reveal/Roll\";\nconst TitleMenu = () => {\n  return (\n    <div className={classes.titleText}>\n      <Bounce top cascade>\n        <h1>Todoz</h1>\n        <p className={classes.descriptionText}>Add a todo below to begin</p>\n      </Bounce>\n    </div>\n  );\n};\n\nexport default TitleMenu;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./ItemCounter.module.css\";\nimport Flash from \"react-reveal/Flash\";\nimport Bounce from \"react-reveal/Fade\";\nconst ItemCounter = () => {\n  const data = useSelector((state) => state.todos);\n  const onGoData = data.filter((i) => i.completed === false);\n  const completedData = data.filter((i) => i.completed === true);\n  const onGoCount = onGoData.length;\n  const completedCount = completedData.length;\n  return (\n      <Bounce top >\n    <div className={classes.progress}>\n      <p className={classes.onGO}>\n        <Flash spy={onGoCount}>\n          <strong>{onGoCount}</strong>\n        </Flash>{\" \"}\n        IN PROGRESS\n      </p>\n      <p className={classes.completed}>\n        <Flash spy={completedCount}>\n          <strong>{completedCount}</strong>\n        </Flash>{\" \"}\n        COMPLETED\n      </p>\n    </div>\n    </Bounce>\n  );\n};\n\nexport default ItemCounter;\n","import React from \"react\";\nimport TodoItem from \"../items/TodoItem\";\nimport TodoItemList from \"../items/TodoItemList\";\nimport TodoItemListCompleted from \"../items/TodoItemListCompleted\";\nimport TitleMenu from \"./TitleMenu/TitleMenu\";\nimport ItemCounter from \"../items/ItemCounter/ItemCounter\";\nimport classes from \"./views.module.css\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Bounce from \"react-reveal/Fade\";\nconst views = () => {\n  const theme = createMuiTheme({\n    typography: {\n      button: {\n        fontFamily: \"Permanent Marker\",\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.pageWrapper}>\n        <TitleMenu />\n        <TodoItem />\n        <ItemCounter />\n        <Bounce top cascade>\n          <span className={classes.goWrapper}>\n            <h3 className={classes.goText}>ON THE GO</h3>\n            <TodoItemList />\n          </span>\n          <span className={classes.completedWrapper}>\n            <h3 className={classes.completedText}>COMPLETED</h3>\n            <TodoItemListCompleted />\n          </span>\n        </Bounce>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default views;\n","import React from \"react\";\nimport View from \"./components/views/views\";\nfunction App() {\n  return (\n    <div>\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          item: action.payload,\n          completed: false,\n        },\n      ];\n    case \"DELETE_TODO\":\n      return state.filter(({ id }) => id !== action.payload);\n\n    case \"COMPLETE_TODO\":\n      return state.map((item) =>\n        item.id === action.id ? { ...item, completed: !item.completed } : item\n      );\n    case \"REVERT_TODO\":\n      return state.map((item) =>\n        item.id === action.id ? { ...item, completed: !item.completed } : item\n      );\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todo\";\nconst allReducers = combineReducers({\n  todos: todoReducer,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}