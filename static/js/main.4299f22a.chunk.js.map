{"version":3,"sources":["components/views/views.module.css","components/items/ItemCounter/ItemCounter.module.css","components/items/TodoItemList.module.css","components/items/TodoItemListCompleted.module.css","components/items/TodoItem.module.css","components/views/TitleMenu/TitleMenu.module.css","actions/index.js","components/items/TodoItem.js","components/items/TodoItemList.js","components/items/TodoItemListCompleted.js","components/views/TitleMenu/TitleMenu.js","components/items/ItemCounter/ItemCounter.js","components/views/views.js","App.js","serviceWorker.js","reducers/todo.js","reducers/index.js","index.js"],"names":["module","exports","nextTodoId","deleteTodo","name","type","payload","completeTodo","id","TodoItem","dispatch","useDispatch","todoItem","todoLast","itemAddHandler","item","console","log","length","trim","className","classes","form","top","onSubmit","e","preventDefault","target","reset","textArea","TextField","variant","onChange","value","todoButton","Button","color","TodoItemList","newData","useSelector","state","todos","filter","i","completed","itemList","map","d","key","right","itemBox","onClick","button1","button2","boxApart","list","spy","TodoItemListCompleted","changedData","left","TitleMenu","titleText","cascade","descriptionText","ItemCounter","props","data","onGoData","completedData","onGoCount","completedCount","progress","onGO","minusStatusButton","minusStatusClicked","size","progressButton","progressClicked","progressDeleteButton","window","confirm","completedButton","completedClicked","completedDeleteButton","Views","useState","toggleProgress","setCompleted","statusBox","setStatusBox","pageWrapper","inputBox","bottom","opposite","when","plusStatusButton","goWrapper","goText","minusButton","completedWrapper","completedText","App","Boolean","location","hostname","match","todoReducer","action","allReducers","combineReducers","store","createStore","allReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4299f22a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"views_pageWrapper__1o1b-\",\"goWrapper\":\"views_goWrapper__3hgNM\",\"goText\":\"views_goText__3nIJV\",\"plusStatusButton\":\"views_plusStatusButton__1d7XU\",\"minusButton\":\"views_minusButton__2J7mb\",\"completedWrapper\":\"views_completedWrapper__2YSbp\",\"completedText\":\"views_completedText__1fUJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ItemCounter_progress__3IoFi\",\"onGo\":\"ItemCounter_onGo__2UnQ3\",\"onGO\":\"ItemCounter_onGO__XGJqd\",\"completed\":\"ItemCounter_completed__2a7ni\",\"progressButton\":\"ItemCounter_progressButton__1vZmp\",\"completedButton\":\"ItemCounter_completedButton__1EhQI\",\"progressDeleteButton\":\"ItemCounter_progressDeleteButton__jh-4z\",\"completedDeleteButton\":\"ItemCounter_completedDeleteButton__1W3TU\",\"minusStatusButton\":\"ItemCounter_minusStatusButton__2S2Lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoItemList_list__31Abh\",\"itemBox\":\"TodoItemList_itemBox__iXUao\",\"button1\":\"TodoItemList_button1__1PjE8\",\"button2\":\"TodoItemList_button2__3EIwJ\",\"boxApart\":\"TodoItemList_boxApart__bVTTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoItemListCompleted_list__1le2D\",\"itemBox\":\"TodoItemListCompleted_itemBox__2Js2m\",\"button2\":\"TodoItemListCompleted_button2__29ibD\",\"button1\":\"TodoItemListCompleted_button1__3yQHU\",\"boxApart\":\"TodoItemListCompleted_boxApart__lP-ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoButton\":\"TodoItem_todoButton__2ZIsq\",\"textArea\":\"TodoItem_textArea__fLO_J\",\"form\":\"TodoItem_form__c9YXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleText\":\"TitleMenu_titleText__1hEvy\",\"descriptionText\":\"TitleMenu_descriptionText__2Vz6t\"};","let nextTodoId = 0;\nexport const addTodo = (name) => {\n  return {\n    type: \"ADD_TODO\",\n    id: nextTodoId++,\n    payload: name,\n  };\n};\n\nexport const deleteTodo = (name) => {\n  return {\n    type: \"DELETE_TODO\",\n    payload: name,\n  };\n};\n\nexport const completeTodo = (id) => {\n  return {\n    type: \"COMPLETE_TODO\",\n    id\n  };\n};\n\nexport const revertTodo = (id) => {\n  return {\n    type: \"REVERT_TODO\",\n    id\n  };\n};\n\nexport const deleteProgress = () => {\n  return{\n    type: \"DELETE_PROGRESS\",\n  }\n}\n\nexport const deleteCompleted = () => {\n  return{\n    type: \"DELETE_COMPLETED\",\n  }\n}","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport classes from \"./TodoItem.module.css\";\nimport { FaPlus } from \"react-icons/fa\";\nimport Flip from 'react-reveal/Flip';\nconst TodoItem = () => {\n  const dispatch = useDispatch();\n  let todoItem = [];\n  let todoLast = [];\n  const itemAddHandler = (item) => {\n    console.log(item);\n    if (item.length === 0) {\n      return;\n    } else if (item === todoLast) {\n      return;\n    } else if (!item.trim()) {\n      return;\n    }\n    todoLast = item;\n    dispatch(addTodo(item));\n  };\n  return (\n    <div className={classes.form}>\n      <Flip top>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            itemAddHandler(todoItem);\n            e.target.reset();\n          }}\n        >\n          <span className={classes.textArea}>\n            <TextField\n              variant=\"outlined\"\n              id=\"outlined-search\"\n              onChange={(e) => {\n                todoItem = e.target.value;\n              }}\n            />\n          </span>\n          <span className={classes.todoButton}>\n            <Button variant=\"outlined\" color=\"default\" type=\"submit\">\n              <FaPlus />\n            </Button>\n          </span>\n        </form>\n      </Flip>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {completeTodo,  deleteTodo } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./TodoItemList.module.css\";\nimport Zoom from \"react-reveal/Flip\";\nimport Pulse from \"react-reveal/Pulse\";\nimport { FaCheck, FaTrash} from \"react-icons/fa\";\nimport Rotate from 'react-reveal/LightSpeed';\nconst TodoItemList = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.todos);\n  const newData = data.filter((i) => i.completed === false);\n  \n  const itemList = newData.map((d) => (\n    <div key={d.id}>\n      <Rotate right>\n      <div className={classes.itemBox}>\n        <li onClick={() => dispatch(completeTodo(d.id))}>\n          {d.item}\n        </li>\n        <button\n          className={classes.button1}\n          onClick={() => dispatch(completeTodo(d.id))} \n        >\n          <FaCheck />\n        </button>\n        <button\n          className={classes.button2}\n          onClick={() => dispatch(deleteTodo(d.id))} \n        >\n          <FaTrash/>\n        </button>\n      </div>\n      </Rotate>\n      <div className={classes.boxApart}></div>\n    </div>\n  ));\n  return (\n    <div>\n      <Zoom top>\n        <div className={classes.list}>\n          <Pulse spy={newData}>\n          <ul>{itemList}</ul>\n          </Pulse>\n        </div>\n      </Zoom>\n    </div>\n  );\n};\n\nexport default TodoItemList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { deleteTodo, revertTodo } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./TodoItemListCompleted.module.css\";\nimport Zoom from \"react-reveal/Flip\";\nimport Roll from \"react-reveal/LightSpeed\";\nimport Pulse from \"react-reveal/Pulse\";\nimport { FaTrash, FaRedo } from \"react-icons/fa\";\n\nconst TodoItemListCompleted = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.todos);\n  const changedData = data.filter((i) => i.completed === true);\n  const itemList = changedData.map((d) => (\n    <div key={d.id}>\n      <Roll left>\n      <div className={classes.itemBox}>\n        <li onClick={() => dispatch(deleteTodo(d.id))}>\n          {d.item}\n        </li>\n        <button\n          className={classes.button1}\n          onClick={() => dispatch(revertTodo(d.id))}\n        >\n          <FaRedo/>\n        </button>\n        <button\n          className={classes.button2}\n          onClick={() => dispatch(deleteTodo(d.id))}\n        >\n          <FaTrash />\n        </button>\n      </div>\n      </Roll>\n      <div className={classes.boxApart}></div>\n    </div>\n  ));\n  return (\n    <div>\n      <Zoom top>\n        <div className={classes.list}>\n          <Pulse spy={changedData}>\n          <ul>{itemList}</ul>\n          </Pulse>\n        </div>\n      </Zoom>\n    </div>\n  );\n};\n\nexport default TodoItemListCompleted;\n","import React from \"react\";\nimport classes from \"./TitleMenu.module.css\";\nimport Flip from 'react-reveal/Flip';\nconst TitleMenu = () => {\n  return (\n    <div className={classes.titleText}>\n      <Flip cascade>\n        <h1>Todoz</h1>\n        <p className={classes.descriptionText}>Add a todo below to begin</p>\n      </Flip>\n    </div>\n  );\n};\n\nexport default TitleMenu;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { deleteProgress, deleteCompleted } from \"../../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./ItemCounter.module.css\";\nimport Flash from \"react-reveal/Flash\";\nimport Flip from \"react-reveal/Flip\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { FaMinusCircle } from \"react-icons/fa\";\nconst ItemCounter = (props) => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.todos);\n  const onGoData = data.filter((i) => i.completed === false);\n  const completedData = data.filter((i) => i.completed === true);\n  const onGoCount = onGoData.length;\n  const completedCount = completedData.length;\n  return (\n    <Flip top>\n      <div className={classes.progress}>\n        <span className={classes.onGO}>\n        <button\n        className={classes.minusStatusButton}\n        onClick={props.minusStatusClicked}\n      >\n        <FaMinusCircle size=\"1.2em\" />\n      </button>\n          <Flash spy={onGoCount}></Flash>\n          IN PROGRESS: <strong>{onGoCount}</strong>\n        </span>\n        <div>\n          <button\n            className={classes.progressButton}\n            onClick={props.progressClicked}\n          >\n            <FaRegEye size=\"2em\" />\n          </button>\n          <button className={classes.progressDeleteButton} onClick={() => { if (window.confirm('Are you sure you wish to delete all in progress items?')) dispatch(deleteProgress()) } }>\n            <FiTrash2 size=\"2em\" />\n          </button>\n        </div>\n        <span className={classes.completed}>\n          <Flash spy={completedCount}></Flash>\n          COMPLETED: <strong>{completedCount}</strong>\n        </span>\n        <div>\n          <button\n            className={classes.completedButton}\n            onClick={props.completedClicked}\n          >\n            <FaRegEye size=\"2em\" />\n          </button>\n          <button className={classes.completedDeleteButton} onClick={() => { if (window.confirm('Are you sure you wish to delete all completed items?')) dispatch(deleteCompleted()) } }>\n            <FiTrash2 size=\"2em\" />\n          </button>\n        </div>\n      </div>\n    </Flip>\n  );\n};\n\nexport default ItemCounter;\n","import React, { useState } from \"react\";\nimport TodoItem from \"../items/TodoItem\";\nimport TodoItemList from \"../items/TodoItemList\";\nimport TodoItemListCompleted from \"../items/TodoItemListCompleted\";\nimport TitleMenu from \"./TitleMenu/TitleMenu\";\nimport ItemCounter from \"../items/ItemCounter/ItemCounter\";\nimport classes from \"./views.module.css\";\nimport Bounce from \"react-reveal/Flip\";\nimport Zoom from \"react-reveal/Fade\";\nimport { FaMinusCircle } from \"react-icons/fa\";\nimport { FaInfoCircle } from \"react-icons/fa\"\nconst Views = () => {\n  const [progress, toggleProgress] = useState(true);\n  const [completed, setCompleted] = useState(true);\n  const [statusBox, setStatusBox] = useState(true);\n  return (\n    <div className={classes.pageWrapper}>\n      <TitleMenu />\n      <div className={classes.inputBox}>\n        <TodoItem />\n        <Bounce bottom opposite when={statusBox}>\n          {statusBox ? (\n            <div>\n              <ItemCounter\n                minusStatusClicked={() => setStatusBox(!statusBox)}\n                progressClicked={() => toggleProgress(!progress)}\n                completedClicked={() => setCompleted(!completed)}\n              />\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </Bounce>\n        <Bounce bottom opposite when={!statusBox}>\n        {!statusBox ? (\n          <button\n            className={classes.plusStatusButton}\n            onClick={() => setStatusBox(!statusBox)}\n          ><Zoom>\n            <FaInfoCircle size=\"2.5em\" /></Zoom>\n          </button>\n        ) : (\n          <div></div>\n        )}\n        </Bounce>\n      </div>\n      <Bounce bottom opposite when={progress}>\n        {progress ? (\n          <span className={classes.goWrapper}>\n            <h3 className={classes.goText}>\n              <button\n                className={classes.minusButton}\n                onClick={() => toggleProgress(!progress)}\n              >\n                <FaMinusCircle size=\"1.2em\" />\n              </button>{\" \"}\n              ON THE GO\n            </h3>\n            <TodoItemList />\n          </span>\n        ) : (\n          <div></div>\n        )}\n      </Bounce>\n      <Bounce bottom opposite when={completed}>\n        {completed ? (\n          <span className={classes.completedWrapper}>\n            <h3 className={classes.completedText}>\n              <button\n                className={classes.minusButton}\n                onClick={() => setCompleted(!completed)}\n              >\n                <FaMinusCircle size=\"1.2em\" />\n              </button>{\" \"}\n              COMPLETED\n            </h3>\n            <TodoItemListCompleted />\n          </span>\n        ) : (\n          <div></div>\n        )}\n      </Bounce>\n    </div>\n  );\n};\n\nexport default Views;\n","import React from \"react\";\nimport View from \"./components/views/views\";\nfunction App() {\n  return (\n    <div>\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          item: action.payload,\n          completed: false,\n        },\n      ];\n    case \"DELETE_TODO\":\n      return state.filter(({ id }) => id !== action.payload);\n\n    case \"COMPLETE_TODO\":\n      return state.map((item) =>\n        item.id === action.id ? { ...item, completed: !item.completed } : item\n      );\n    case \"REVERT_TODO\":\n      return state.map((item) =>\n        item.id === action.id ? { ...item, completed: !item.completed } : item\n      );\n    case \"DELETE_PROGRESS\":\n      return state.filter(({ ...item }) => item.completed === true);\n    case \"DELETE_COMPLETED\":\n      return state.filter(({ ...item }) => item.completed === false);\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todo\";\nconst allReducers = combineReducers({\n  todos: todoReducer,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport allReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}